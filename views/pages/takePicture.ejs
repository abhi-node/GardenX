<!DOCTYPE html>
<html>
    <head>
        <title>Upload a Picture</title>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css" integrity="sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2" crossorigin="anonymous">
    </head>
    <body>
        <h1><%= message %></h1>
        <video id="cameraStream" autoplay muted playsinline>Camera stream unavaliable</video>
        <button id="cameraStreamToggle">Show camera stream</button>
        <form action="/root/uploadPicture" enctype="multipart/form-data" method="POST">
            <input type="file" name='image' accept="image/*" capture="camera" required="true">
            <button type="submit">Take a picture</button>
        </form>


        <script>
            let windowWidth=window.innerWidth;
            let windowHeight=window.innerHeight;
            const videoObj = document.querySelector('#cameraStream');

            //Enable <video>
            function enableVideoPreview(stream){
                const videoDevice = stream.getVideoTracks()[0].label
                window.stream = stream;
                videoObj.srcObject = stream;
            }

            function getRearCamera(devices){
                listOfCameras = []
                devices.forEach(function(device){
                    if(device.kind === "videoinput"){
                        listOfCameras.push(device.id)
                    }
                })
                if(listOfCameras.length == 1){
                    return listOfCameras[0] //Only 1 camera, return that
                }else{
                    return listOfCameras[1] //There's a rear camera, return that
                }
            }

            //Webcam stream
            async function createStream(event){
                
                devices = await navigator.mediaDevices.enumerateDevices() 
                console.log(devices)
                camId = getRearCamera(devices)

                try{
                    stream = await navigator.mediaDevices.getUserMedia({audio:false, video:{deviceId:{exact: camId}}})
                    event.target.disabled = true;
                    enableVideoPreview(stream);
                }catch(err){
                    alert("Error with video stream, "+ err)
                }
            }
            //alert('test')
            document.querySelector("#cameraStreamToggle").addEventListener('click', event => createStream(event))
        </script>
    </body>
</html>